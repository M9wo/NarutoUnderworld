package alcoholmod.Mathioks.Summon;

import net.minecraft.client.renderer.entity.RenderLiving;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.init.Blocks;
import net.minecraft.util.MathHelper;
import net.minecraft.util.ResourceLocation;
import org.lwjgl.opengl.GL11;

public class RenderChameleon extends RenderLiving {
  private static final ResourceLocation grassChameleonTexture = new ResourceLocation("tm:textures/entity/grassChameleon.png");
  
  private static final ResourceLocation desertChameleonTexture = new ResourceLocation("tm:textures/entity/desertChameleon.png");
  
  private static final ResourceLocation stoneChameleonTexture = new ResourceLocation("tm:textures/entity/stoneChameleon.png");
  
  private static final ResourceLocation logChameleonTexture = new ResourceLocation("tm:textures/entity/logChameleon.png");
  
  private static final ResourceLocation brickChameleonTexture = new ResourceLocation("tm:textures/entity/brickChameleon.png");
  
  private static final ResourceLocation netherChameleonTexture = new ResourceLocation("tm:textures/entity/netherChameleon.png");
  
  private static final ResourceLocation dirtChameleonTexture = new ResourceLocation("tm:textures/entity/dirtChameleon.png");
  
  private static final ResourceLocation glassChameleonTexture = new ResourceLocation("tm:textures/entity/glassChameleon.png");
  
  private static final ResourceLocation snowChameleonTexture = new ResourceLocation("tm:textures/entity/snowChameleon.png");
  
  private static final ResourceLocation woodChameleonTexture = new ResourceLocation("tm:textures/entity/woodChameleon.png");
  
  private static final ResourceLocation grassDesertChameleonTexture = new ResourceLocation("tm:textures/entity/grassDesertChameleon.png");
  
  protected ModelChameleon model;
  
  private float scale;
  
  public RenderChameleon(ModelChameleon par1ModelBase, float par2) {
    super(par1ModelBase, par2);
    this.model = (ModelChameleon)this.mainModel;
  }
  
  protected void preRenderCallback(EntityLivingBase par1EntityLivingBase, float par2) {
    GL11.glScalef(5.0F, 5.0F, 5.0F);
  }
  
  protected ResourceLocation ChameleonTexture(EntityChameleon par1EntityChameleon, int chunkX, int chunkZ) {
    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sand && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sandstone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sandstone_stairs) {
      if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_brick_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_pressure_plate && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_slab && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stonebrick && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.cobblestone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.cobblestone_wall && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.mossy_cobblestone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.anvil && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.furnace && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.dispenser && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.hopper && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.gravel && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.clay && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.coal_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.iron_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.iron_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.diamond_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.gold_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.emerald_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.lapis_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.redstone_ore) {
        if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.log && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.log2) {
          if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.brick_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.brick_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.flower_pot) {
            if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.netherrack && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.soul_sand) {
              if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.dirt)
                return dirtChameleonTexture; 
              if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass_pane && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.packed_ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass_pane && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.packed_ice) {
                if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.snow && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.snow_layer && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.wool) {
                  if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.planks && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.oak_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.jungle_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.birch_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.spruce_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.acacia_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.dark_oak_stairs) {
                    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.grass)
                      return grassChameleonTexture; 
                    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 1, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.leaves)
                      return grassChameleonTexture; 
                    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sand && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sandstone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sandstone_stairs) {
                      if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_brick_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_pressure_plate && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_slab && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stonebrick && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.cobblestone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.cobblestone_wall && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.mossy_cobblestone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.anvil && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.furnace && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.dispenser && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.hopper && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.gravel && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.clay && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.coal_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.iron_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.iron_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.diamond_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.gold_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.emerald_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.lapis_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.redstone_ore) {
                        if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.log && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.log2) {
                          if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.brick_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.brick_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.flower_pot) {
                            if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.netherrack && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.soul_sand) {
                              if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.dirt)
                                return dirtChameleonTexture; 
                              if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass_pane && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.packed_ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass_pane && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.packed_ice) {
                                if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.snow && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.snow_layer && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.wool) {
                                  if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.planks && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.oak_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.jungle_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.birch_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.spruce_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.acacia_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.dark_oak_stairs) {
                                    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.grass)
                                      return grassChameleonTexture; 
                                    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 2, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.leaves)
                                      return grassChameleonTexture; 
                                    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sand && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sandstone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.sandstone_stairs) {
                                      if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_brick_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_pressure_plate && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stone_slab && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.stonebrick && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.cobblestone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.cobblestone_wall && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.mossy_cobblestone && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.anvil && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.furnace && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.dispenser && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.hopper && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.gravel && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.clay && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.coal_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.iron_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.iron_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.diamond_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.gold_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.emerald_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.lapis_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.redstone_ore) {
                                        if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.log && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.log2) {
                                          if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.brick_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.brick_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.flower_pot) {
                                            if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.netherrack && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_ore && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.soul_sand) {
                                              if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.dirt)
                                                return dirtChameleonTexture; 
                                              if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass_pane && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.packed_ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.glass_pane && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.packed_ice) {
                                                if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.snow && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.snow_layer && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.ice && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_block && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.quartz_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.wool) {
                                                  if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.planks && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.oak_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.jungle_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.birch_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.spruce_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.acacia_stairs && par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) != Blocks.dark_oak_stairs) {
                                                    if (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.grass)
                                                      return grassChameleonTexture; 
                                                    return (par1EntityChameleon.worldObj.getBlock(MathHelper.floor_double(par1EntityChameleon.posX), (int)par1EntityChameleon.posY - 3, MathHelper.floor_double(par1EntityChameleon.posZ)) == Blocks.leaves) ? grassChameleonTexture : grassChameleonTexture;
                                                  } 
                                                  return woodChameleonTexture;
                                                } 
                                                return snowChameleonTexture;
                                              } 
                                              return glassChameleonTexture;
                                            } 
                                            return netherChameleonTexture;
                                          } 
                                          return brickChameleonTexture;
                                        } 
                                        return logChameleonTexture;
                                      } 
                                      return stoneChameleonTexture;
                                    } 
                                    return desertChameleonTexture;
                                  } 
                                  return woodChameleonTexture;
                                } 
                                return snowChameleonTexture;
                              } 
                              return glassChameleonTexture;
                            } 
                            return netherChameleonTexture;
                          } 
                          return brickChameleonTexture;
                        } 
                        return logChameleonTexture;
                      } 
                      return stoneChameleonTexture;
                    } 
                    return desertChameleonTexture;
                  } 
                  return woodChameleonTexture;
                } 
                return snowChameleonTexture;
              } 
              return glassChameleonTexture;
            } 
            return netherChameleonTexture;
          } 
          return brickChameleonTexture;
        } 
        return logChameleonTexture;
      } 
      return stoneChameleonTexture;
    } 
    return desertChameleonTexture;
  }
  
  protected ResourceLocation getEntityTexture(Entity entity) {
    return ChameleonTexture((EntityChameleon)entity, 0, 0);
  }
}
